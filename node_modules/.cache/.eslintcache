[{"D:\\web\\pokedex\\src\\index.js":"1","D:\\web\\pokedex\\src\\App.js":"2","D:\\web\\pokedex\\src\\reportWebVitals.js":"3","D:\\web\\pokedex\\src\\screens\\HomeScreen.js":"4","D:\\web\\pokedex\\src\\components\\PokedexAppBar.js":"5","D:\\web\\pokedex\\src\\components\\PokemonList.js":"6","D:\\web\\pokedex\\src\\UIElements\\LoadingText.js":"7","D:\\web\\pokedex\\src\\components\\PokemonCard.js":"8","D:\\web\\pokedex\\src\\components\\PokemonInfo.js":"9","D:\\web\\pokedex\\src\\screens\\PokemonPage.js":"10","D:\\web\\pokedex\\src\\UIElements\\BackgroundTriangles.js":"11","D:\\web\\pokedex\\src\\components\\PokemonTab.js":"12","D:\\web\\pokedex\\src\\components\\TabPanel.js":"13","D:\\web\\pokedex\\src\\components\\AboutTab.js":"14","D:\\web\\pokedex\\src\\components\\StatsTab.js":"15","D:\\web\\pokedex\\src\\components\\PokemonPageInfo.js":"16","D:\\web\\pokedex\\src\\UIElements\\TypeBadge.js":"17"},{"size":500,"mtime":1651881557748,"results":"18","hashOfConfig":"19"},{"size":687,"mtime":1652483675762,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1648070839967,"results":"21","hashOfConfig":"19"},{"size":851,"mtime":1652574315459,"results":"22","hashOfConfig":"19"},{"size":1080,"mtime":1652483823212,"results":"23","hashOfConfig":"19"},{"size":2011,"mtime":1652571581061,"results":"24","hashOfConfig":"19"},{"size":1005,"mtime":1648854390166,"results":"25","hashOfConfig":"19"},{"size":985,"mtime":1652175345276,"results":"26","hashOfConfig":"19"},{"size":2525,"mtime":1648762795137,"results":"27","hashOfConfig":"28"},{"size":912,"mtime":1652571415957,"results":"29","hashOfConfig":"19"},{"size":376,"mtime":1651959805716,"results":"30","hashOfConfig":"19"},{"size":1072,"mtime":1652474033221,"results":"31","hashOfConfig":"19"},{"size":553,"mtime":1652012091300,"results":"32","hashOfConfig":"19"},{"size":2822,"mtime":1652704468544,"results":"33","hashOfConfig":"19"},{"size":1908,"mtime":1652479879026,"results":"34","hashOfConfig":"19"},{"size":1895,"mtime":1652572083538,"results":"35","hashOfConfig":"19"},{"size":360,"mtime":1652313647519,"results":"36","hashOfConfig":"19"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1kh8f82",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},"pwoahv",{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"D:\\web\\pokedex\\src\\index.js",[],[],["94","95"],"D:\\web\\pokedex\\src\\App.js",[],[],"D:\\web\\pokedex\\src\\reportWebVitals.js",[],[],"D:\\web\\pokedex\\src\\screens\\HomeScreen.js",[],[],"D:\\web\\pokedex\\src\\components\\PokedexAppBar.js",["96","97","98","99"],[],"import { Link } from \"react-router-dom\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport \"typeface-montserrat\";\r\nimport ArrowBackIosIcon from \"@mui/icons-material/ArrowBackIos\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\n\r\nconst PokedexAppBar = () => {\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"static\" elevation={0} color=\"transparent\">\r\n        <Toolbar>\r\n          <Link to={\"/\"} style={{ textDecoration: \"none\", margin: \"auto\" }}>\r\n            <Typography\r\n              variant=\"h6\"\r\n              component=\"div\"\r\n              sx={{ flexGrow: 1, fontFamily: \"montserrat\", fontWeight: \"600\" }}\r\n              color=\"black\"\r\n            >\r\n              Pok√©dex\r\n            </Typography>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PokedexAppBar;\r\n","D:\\web\\pokedex\\src\\components\\PokemonList.js",["100"],[],"import { React, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { TextField } from \"@mui/material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\nimport PokemonCard from \"./PokemonCard\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nconst PokemonList = ({ allPokemonData }) => {\r\n  const [searchFilter, setSearchFilter] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <Grid container mt={-3}>\r\n        <Grid\r\n          item\r\n          container\r\n          xl={12}\r\n          s={12}\r\n          mt={2}\r\n          justifyContent=\"center\"\r\n          mb={3}\r\n        >\r\n          <Grid item pt={2.5} mr={1}>\r\n            <SearchIcon sx={{ color: \"#989898\" }} />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              label=\"Search\"\r\n              variant=\"standard\"\r\n              onChange={(event) => {\r\n                setSearchFilter(event.target.value);\r\n              }}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Container className=\"container\">\r\n        <Grid item container spacing={1} justifyContent=\"center\">\r\n          {allPokemonData\r\n            .filter((val) => {\r\n              if (searchFilter === \"\") {\r\n                return val;\r\n              } else if (\r\n                val.name.toLowerCase().includes(searchFilter.toLowerCase())\r\n              ) {\r\n                return val;\r\n              }\r\n            })\r\n            .map((pokemon) => {\r\n              return (\r\n                <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                  <Link\r\n                    to={`/pokemon/${pokemon.dexNumber}`}\r\n                    style={{ textDecoration: \"none\" }}\r\n                  >\r\n                    <PokemonCard pokemon={pokemon} />\r\n                  </Link>\r\n                </Grid>\r\n              );\r\n            })}\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonList;\r\n","D:\\web\\pokedex\\src\\UIElements\\LoadingText.js",[],[],"D:\\web\\pokedex\\src\\components\\PokemonCard.js",[],[],"D:\\web\\pokedex\\src\\components\\PokemonInfo.js",["101","102","103","104"],[],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Container } from \"@mui/material\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport LinearProgress from \"@mui/material/LinearProgress\";\r\n\r\nconst PokemonInfo = ({ pokemon }) => {\r\n  return (\r\n    <Container>\r\n      <Grid container>\r\n        <Grid item xl={4} md={4} xs={12} textAlign=\"center\">\r\n          <Grid item>\r\n            <img src={pokemon.sprite} />\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <Typography>{pokemon.description}</Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xl={4}\r\n          md={4}\r\n          xs={12}\r\n          textAlign=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Typography mt={0.5} variant=\"h5\" style={{ fontWeight: \"bold\" }}>\r\n            Types\r\n          </Typography>\r\n          {pokemon.types.map((type) => {\r\n            return <Typography>{type.type.name}</Typography>;\r\n          })}\r\n          <Typography mt={2} variant=\"h5\" style={{ fontWeight: \"bold\" }}>\r\n            Abilities\r\n          </Typography>\r\n          {pokemon.abilities.map((ability) => {\r\n            return <Typography>{ability.ability.name}</Typography>;\r\n          })}\r\n        </Grid>\r\n\r\n        <Grid item xl={4} md={4} xs={12} textAlign=\"center\">\r\n          <Grid item>\r\n            <Typography mt={0.5} variant=\"h5\" style={{ fontWeight: \"bold\" }}>\r\n              {\"Base stats\"}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            xl={12}\r\n            md={12}\r\n            xs={12}\r\n            container\r\n            justifyContent=\"center\"\r\n            textAlign=\"center\"\r\n            spacing={1}\r\n          >\r\n            {pokemon.stats.map((stat) => {\r\n              return (\r\n                <>\r\n                  <Grid item md={4}>\r\n                    <Typography>{stat.stat.name}</Typography>\r\n                  </Grid>\r\n                  <Grid item md={4}>\r\n                    <Typography>{stat.base_stat}</Typography>\r\n                  </Grid>\r\n                  <Grid item md={4} mt={1}>\r\n                    <LinearProgress\r\n                      variant=\"determinate\"\r\n                      value={stat.base_stat}\r\n                    />\r\n                  </Grid>\r\n                </>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PokemonInfo;\r\n",["105","106"],"D:\\web\\pokedex\\src\\screens\\PokemonPage.js",["107"],[],"import { React, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\nimport PokemonPageInfo from \"../components/PokemonPageInfo\";\r\nimport LoadingText from \"../UIElements/LoadingText\";\r\n\r\nconst PokemonPage = () => {\r\n  const { dexNumber } = useParams();\r\n\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [pokemon, setPokemon] = useState({});\r\n\r\n  const getPokemonData = async () => {\r\n    let response;\r\n    try {\r\n      response = await axios(\r\n        `${process.env.REACT_APP_BACKEND_URL}/pokemon/${dexNumber}`\r\n      );\r\n      setPokemon(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n    setIsLoaded(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPokemonData();\r\n  }, []);\r\n\r\n  return (\r\n    <>{isLoaded ? <PokemonPageInfo pokemon={pokemon} /> : <LoadingText />}</>\r\n  );\r\n};\r\n\r\nexport default PokemonPage;\r\n","D:\\web\\pokedex\\src\\UIElements\\BackgroundTriangles.js",[],[],"D:\\web\\pokedex\\src\\components\\PokemonTab.js",[],[],"D:\\web\\pokedex\\src\\components\\TabPanel.js",[],[],"D:\\web\\pokedex\\src\\components\\AboutTab.js",["108"],[],"D:\\web\\pokedex\\src\\components\\StatsTab.js",[],[],"D:\\web\\pokedex\\src\\components\\PokemonPageInfo.js",[],[],"D:\\web\\pokedex\\src\\UIElements\\TypeBadge.js",[],[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":7,"column":8,"nodeType":"115","messageId":"116","endLine":7,"endColumn":24},{"ruleId":"113","severity":1,"message":"117","line":9,"column":8,"nodeType":"115","messageId":"116","endLine":9,"endColumn":14},{"ruleId":"113","severity":1,"message":"118","line":10,"column":8,"nodeType":"115","messageId":"116","endLine":10,"endColumn":18},{"ruleId":"113","severity":1,"message":"119","line":11,"column":8,"nodeType":"115","messageId":"116","endLine":11,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":44,"column":27,"nodeType":"122","messageId":"123","endLine":44,"endColumn":29},{"ruleId":"113","severity":1,"message":"124","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"113","severity":1,"message":"125","line":1,"column":28,"nodeType":"115","messageId":"116","endLine":1,"endColumn":36},{"ruleId":"113","severity":1,"message":"126","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":15,"column":13,"nodeType":"129","endLine":15,"endColumn":41},{"ruleId":"109","replacedBy":"130"},{"ruleId":"111","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":30,"column":6,"nodeType":"134","endLine":30,"endColumn":8,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":65,"column":31,"nodeType":"138","messageId":"139","endLine":65,"endColumn":33},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"no-unused-vars","'ArrowBackIosIcon' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useEffect' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["140"],["141"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getPokemonData'. Either include it or remove the dependency array.","ArrayExpression",["142"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},"Update the dependencies array to be: [getPokemonData]",{"range":"145","text":"146"},[772,774],"[getPokemonData]"]