{"ast":null,"code":"var _jsxFileName = \"D:\\\\web\\\\pokedex\\\\root\\\\frontend\\\\src\\\\screens\\\\HomeScreen.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PokemonList from \"../components/PokemonList\";\nimport LoadingText from \"../UIElements/LoadingText\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst HomeScreen = () => {\n  _s();\n\n  const [allPokemonData, setAllPokemonData] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const getAllPokemonURL = async () => {\n    const response = await axios(\"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=150\");\n    return response.data.results;\n  };\n\n  const getDescription = async url => {\n    const response = await axios(url);\n    return response.data.flavor_text_entries[9].flavor_text;\n  };\n\n  const getAllPokemonData = async () => {\n    const urls = await getAllPokemonURL();\n    const allData = [];\n\n    for (let i = 0; i < urls.length; i++) {\n      const response = await axios(urls[i]);\n      const data = response.data;\n      const description = await getDescription(data.species.url);\n      const pokemon = {\n        id: data.id,\n        name: data.name,\n        sprite: data.sprites.front_default,\n        description: description,\n        types: data.types,\n        abilities: data.abilities,\n        stats: data.stats\n      };\n      allData.push(pokemon);\n    }\n\n    setAllPokemonData(allData);\n    setIsLoaded(true);\n  };\n\n  const getPokemonData = async () => {\n    let response;\n\n    try {\n      response = await axios(\"http://localhost:5000/\");\n    } catch (error) {\n      console.log(\"could not get pokemon data\");\n    }\n\n    console.log(response.data);\n  };\n\n  useEffect(() => {\n    getPokemonData();\n    getAllPokemonData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoaded ? /*#__PURE__*/_jsxDEV(PokemonList, {\n      allPokemonData: allPokemonData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoadingText, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(HomeScreen, \"PErmC6g1YtYM71I4GMqtiPzp8nQ=\");\n\n_c = HomeScreen;\nexport default HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["D:/web/pokedex/root/frontend/src/screens/HomeScreen.js"],"names":["React","useState","useEffect","axios","PokemonList","LoadingText","HomeScreen","allPokemonData","setAllPokemonData","isLoaded","setIsLoaded","getAllPokemonURL","response","data","results","getDescription","url","flavor_text_entries","flavor_text","getAllPokemonData","urls","allData","i","length","description","species","pokemon","id","name","sprite","sprites","front_default","types","abilities","stats","push","getPokemonData","error","console","log"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMU,gBAAgB,GAAG,YAAY;AACnC,UAAMC,QAAQ,GAAG,MAAMT,KAAK,CAC1B,uDAD0B,CAA5B;AAGA,WAAOS,QAAQ,CAACC,IAAT,CAAcC,OAArB;AACD,GALD;;AAOA,QAAMC,cAAc,GAAG,MAAOC,GAAP,IAAe;AACpC,UAAMJ,QAAQ,GAAG,MAAMT,KAAK,CAACa,GAAD,CAA5B;AACA,WAAOJ,QAAQ,CAACC,IAAT,CAAcI,mBAAd,CAAkC,CAAlC,EAAqCC,WAA5C;AACD,GAHD;;AAKA,QAAMC,iBAAiB,GAAG,YAAY;AACpC,UAAMC,IAAI,GAAG,MAAMT,gBAAgB,EAAnC;AACA,UAAMU,OAAO,GAAG,EAAhB;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,YAAMV,QAAQ,GAAG,MAAMT,KAAK,CAACiB,IAAI,CAACE,CAAD,CAAL,CAA5B;AACA,YAAMT,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,YAAMW,WAAW,GAAG,MAAMT,cAAc,CAACF,IAAI,CAACY,OAAL,CAAaT,GAAd,CAAxC;AACA,YAAMU,OAAO,GAAG;AACdC,QAAAA,EAAE,EAAEd,IAAI,CAACc,EADK;AAEdC,QAAAA,IAAI,EAAEf,IAAI,CAACe,IAFG;AAGdC,QAAAA,MAAM,EAAEhB,IAAI,CAACiB,OAAL,CAAaC,aAHP;AAIdP,QAAAA,WAAW,EAAEA,WAJC;AAKdQ,QAAAA,KAAK,EAAEnB,IAAI,CAACmB,KALE;AAMdC,QAAAA,SAAS,EAAEpB,IAAI,CAACoB,SANF;AAOdC,QAAAA,KAAK,EAAErB,IAAI,CAACqB;AAPE,OAAhB;AASAb,MAAAA,OAAO,CAACc,IAAR,CAAaT,OAAb;AACD;;AACDlB,IAAAA,iBAAiB,CAACa,OAAD,CAAjB;AACAX,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GArBD;;AAuBA,QAAM0B,cAAc,GAAG,YAAY;AACjC,QAAIxB,QAAJ;;AACA,QAAI;AACFA,MAAAA,QAAQ,GAAG,MAAMT,KAAK,CAAC,wBAAD,CAAtB;AACD,KAFD,CAEE,OAAOkC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD;;AAEDD,IAAAA,OAAO,CAACC,GAAR,CAAY3B,QAAQ,CAACC,IAArB;AACD,GATD;;AAWAX,EAAAA,SAAS,CAAC,MAAM;AACdkC,IAAAA,cAAc;AAEdjB,IAAAA,iBAAiB;AAClB,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA,cACGV,QAAQ,gBACP,QAAC,WAAD;AAAa,MAAA,cAAc,EAAEF;AAA7B;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAJJ,mBADF;AASD,CAjED;;GAAMD,U;;KAAAA,U;AAmEN,eAAeA,UAAf","sourcesContent":["import { React, useState, useEffect } from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport PokemonList from \"../components/PokemonList\";\r\nimport LoadingText from \"../UIElements/LoadingText\";\r\n\r\nconst HomeScreen = () => {\r\n  const [allPokemonData, setAllPokemonData] = useState([]);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  const getAllPokemonURL = async () => {\r\n    const response = await axios(\r\n      \"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=150\"\r\n    );\r\n    return response.data.results;\r\n  };\r\n\r\n  const getDescription = async (url) => {\r\n    const response = await axios(url);\r\n    return response.data.flavor_text_entries[9].flavor_text;\r\n  };\r\n\r\n  const getAllPokemonData = async () => {\r\n    const urls = await getAllPokemonURL();\r\n    const allData = [];\r\n\r\n    for (let i = 0; i < urls.length; i++) {\r\n      const response = await axios(urls[i]);\r\n      const data = response.data;\r\n      const description = await getDescription(data.species.url);\r\n      const pokemon = {\r\n        id: data.id,\r\n        name: data.name,\r\n        sprite: data.sprites.front_default,\r\n        description: description,\r\n        types: data.types,\r\n        abilities: data.abilities,\r\n        stats: data.stats,\r\n      };\r\n      allData.push(pokemon);\r\n    }\r\n    setAllPokemonData(allData);\r\n    setIsLoaded(true);\r\n  };\r\n\r\n  const getPokemonData = async () => {\r\n    let response;\r\n    try {\r\n      response = await axios(\"http://localhost:5000/\");\r\n    } catch (error) {\r\n      console.log(\"could not get pokemon data\");\r\n    }\r\n\r\n    console.log(response.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPokemonData();\r\n\r\n    getAllPokemonData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {isLoaded ? (\r\n        <PokemonList allPokemonData={allPokemonData} />\r\n      ) : (\r\n        <LoadingText />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n"]},"metadata":{},"sourceType":"module"}